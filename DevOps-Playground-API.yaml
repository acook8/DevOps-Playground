openapi: 3.0.0
info:
  version: 1.0.0
  title: DevOps Playground
servers:
  - url: "https://8662fec1-dbf8-4412-af2c-95a43409a7d3.mock.pstmn.io"
    description: mock server
  - url: "https://devops-playground.home"
    description: dev server in home network
  - url: "https://devops-playground.duckdns.org"
    description: production server
paths:
  /api/users/{id}:
    get:
      summary: "Returns details about a particular user"
      operationId: listUser
      parameters:
        - name: id
          in: path
          description: ID of the user
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: "Details about a user by ID"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Updates user by their id
      operationId: updateUser
      parameters:
        - name: id
          in: path
          description: ID of the user
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: "User created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Deletes user by their id
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: ID of the user
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: "User deleted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/users:
    get:
      summary: "Returns all the users"
      operationId: listUsers
      tags:
        - user
      responses:
        "200":
          description: Array of user objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: "Add A user"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: User successfully added
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    delete:
      summary: "Delete all users"
      responses:
        "200":
          description: User successfully deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
components:
  schemas:
    User:
      type: object
      required:
        - firstName
        - lastName
      properties:
        id:
          type: integer
          format: int32
        firstName:
          type: string
        lastName:
          type: string
        age:
          type: integer
          format: int32
        address:
          type: string
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Status:
      type: object
      required: 
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
